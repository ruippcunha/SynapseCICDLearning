# This is a basic workflow to help you get started with Actions

name: Start and stop triggers

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Azure PowerShell Action
        uses: Azure/powershell@v2
        with:
          # Specify the Az PowerShell script here.
          inlineScript: | 
          
                  $clientId = ${{SECRETS.CLIENTID}}
                  $tenantId = ${{SECRETS.TENANTID}}
                  $clientSecret = ${{SECRETS.CLIENTSECRET}}
                  $subscriptionId = ${{SECRETS.SUBSCRIPTIONID}}
            
                  $securePassword = ConvertTo-SecureString $clientSecret -AsPlainText -Force
                  $psCredential = New-Object System.Management.Automation.PSCredential ($clientId, $securePassword)
                  Connect-AzAccount -ServicePrincipal -Credential $psCredential -Tenant $tenantId -SubscriptionId $subscriptionId
                   
                   $triggerlist= Get-AzSynapseTrigger -WorkspaceName "swift-demo" | select Name
                    # Loop through each trigger and start it
                    foreach ($trigger in $triggerlist ) {
                        $name = $trigger.Name 
                        echo "Stopping trigger $name"
                          try {
                            Stop-AzSynapseTrigger -WorkspaceName "swift-demo" -Name $name -PassThru
                          } 
                          catch { 
                            echo "Trigger $name stopped"
                          }
                    }
          
          # Azure PS version to be used to execute the script, example: 1.8.0, 2.8.0, 3.4.0. To use the latest version, specify "latest".
          azPSVersion: "latest"

                
