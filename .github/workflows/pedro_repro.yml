# This is a basic workflow to help you get started with Actions

name: RemoveArtifact

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  #push:
  #  branches: [ "main" ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: DeletePipeline
        uses: Azure/powershell@v2
        with:
          # Specify the Az PowerShell script here.
          inlineScript: | 
          
                  $clientId = "${{SECRETS.CLIENTID}}"
                  $tenantId = "${{SECRETS.TENANTID}}"
                  $clientSecret = "${{SECRETS.CLIENTSECRET}}"
                  $subscriptionId = "${{SECRETS.SUBSCRIPTIONID}}"
                  $SynapseWorkspaceName = "${{secrets.TargetWorkspaceName}}"
            
                  # Make PSGallery trusted to avoid prompts during Install/Update

                   Make PSGallery trusted to avoid prompts
                   $repo = Get-PSRepository -Name 'PSGallery' -ErrorAction SilentlyContinue
                   if (-not $repo -or $repo.InstallationPolicy -ne 'Trusted') {
                      Set-PSRepository -Name 'PSGallery' -InstallationPolicy Trusted
                   }

          
                  # Ensure PowerShellGet cmdlets exist (should be present on GitHub runners)
                  Import-Module PowerShellGet -ErrorAction Stop
            

                  Write-Host "Installing Az..."
                  Install-Module -Name Az -Force -AllowClobber
                  Write-Host "Installing Az.Synapse..."
                  Install-Module -Name Az.Synapse -Force -AllowClobber
            
            

                  $latestAz = (Get-Module -ListAvailable Az | Sort-Object Version -Descending | Select-Object -First 1).Path
                  $latestSynapse = (Get-Module -ListAvailable Az.Synapse | Sort-Object Version -Descending | Select-Object -First 1).Path

                  Write-Host "Az version being used"
                  echo $latestAz
                  Write-Host "Az.Synapse version being used"
                  echo $latestSynapse
                  
                  Import-Module $latestAz -Force
                  Import-Module $latestSynapse -Force

                  Write-Host "Authenticating...."
                  $securePassword = ConvertTo-SecureString $clientSecret -AsPlainText -Force
                  $psCredential = New-Object System.Management.Automation.PSCredential ($clientId, $securePassword)
                  Connect-AzAccount -ServicePrincipal -Credential $psCredential -Tenant $tenantId -SubscriptionId $subscriptionId                  

                  Write-Host "Deleting the pipeline..."
                  Remove-AzSynapsePipeline -WorkspaceName $SynapseWorkspaceName -Name "newpipe" -Force -PassThru -Confirm:$false
                  
          # Azure PS version to be used to execute the script, example: 1.8.0, 2.8.0, 3.4.0. To use the latest version, specify "latest".
          azPSVersion: "latest"
