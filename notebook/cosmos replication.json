{
	"name": "cosmos replication",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "cunhasparkpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "d1f8dcbd-5265-4098-8cad-dc03ed9762e6"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/7b1f20ef-1976-4cda-8578-8ed55045bd7a/resourceGroups/rg-cunha/providers/Microsoft.Synapse/workspaces/wspcunha/bigDataPools/cunhasparkpool",
				"name": "cunhasparkpool",
				"type": "Spark",
				"endpoint": "https://wspcunha.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/cunhasparkpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "2.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"import binascii\r\n",
					"import pyspark.sql.functions as f\r\n",
					"from pyspark.sql.types import BinaryType\r\n",
					"\r\n",
					"def convert(s):\r\n",
					"    return ''.join(\"%02x\"%i for i in bytes(s, 'ascii')) \r\n",
					"#    retval = \"\"\r\n",
					"#    for byte in bytes:\r\n",
					"#        retval += (\"%02x\" % byte)\r\n",
					"#    return retval\r\n",
					"\r\n",
					"convert_udf = f.udf(convert)\r\n",
					"\r\n",
					"df = spark.read.format(\"cosmos.olap\")\\\r\n",
					"    .option(\"spark.synapse.linkedService\", \"LS_NEW_COSMOS_MONGO_DB\")\\\r\n",
					"    .option(\"spark.cosmos.container\", \"analytical_store_new_coll\")\\\r\n",
					"    .load()\r\n",
					"\r\n",
					"df = df.withColumn(\"objectId\", f.col(\"_id.objectId\")).withColumn(\"objectId_converted\", convert_udf(f.col(\"_id.objectId\")))\r\n",
					"\r\n",
					"display(df)\r\n",
					"df.printSchema()"
				],
				"execution_count": 18
			}
		]
	}
}